                             sudo cp nvenc_5.0.1_sdk/Samples/common/inc/*.h
                                   /usr/local/include

***WELCOME ALL***

Today we will Build a WORKING and UP TO DATE FFmpeg with NVencoding + Cuda + OpenGL + libnpp + everything else
important also WORKING + UP TO DATE built from source. I will also be building the current up to date OBS for Ubuntu, Mint, Debian for use with NVenc. 
Guide will still work fine ANY OTHER Linux version aside from the packagemanager commands for the depends... 


***First before we start anything we will need three things installed, built and placed into specific paths:*** 

1: Nvidia driver: :http://us.download.nvidia.com/XFree86/Linux-x86_64/375.39/NVIDIA-Linux-x86_64-375.39.run

2: Cuda 7.5: (Officially supports NVenc and Cuda)  http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run

3: Video_Codec_SDK: https://developer.nvidia.com/designworks/video_codec_sdk/downloads/v7.1


Now comes the fun! First we need to install Nvidia diver:

Press Ctrl+Alt+F1 at log-in screen (type in user-name and password into command line) 
*No Apple Keyboards* (You may be able to change that in the keyboard settings, but it might be a little harder without GUI)

$: sudo nano /etc/modprobe.d/blacklist.conf

(Add the following lines to the bottom of the file)

blacklist amd76x_edac
blacklist vga16fb
blacklist nouveau
blacklist rivafb
blacklist nvidiafb
blacklist rivatv

(Hold Control + o then hit Enter to save)

(Hold Control + x then hit Enter to exit)

sudo apt-get remove --purge nvidia*

sudo service lightdm stop

 (for Mint its "sudo service mdm stop" Somtimes you will need to kill lightdm other ways just google it,
bottom line xsever cannot be running while installing this driver)

$: cd ~/Downloads

$: wget us.download.nvidia.com/XFree86/Linux-x86_64/375.39/NVIDIA-Linux-x86_64-375.39.run

$: sudo chmod +x NVIDIA-Linux-x86_64-375.39.run

$: sudo ./NVIDIA-Linux-x86_64-375.39.run

$: sudo nvidia-xconfig

$: sudo update-initramfs -u

$: sudo reboot

(When computer reboots we cant start inatalling the Video_Codec_SDK)


*** Installing Video_Codec_SDK ***

           $: cd Downloads
 /Downloads$: firefox https://developer.nvidia.com/designworks/video_codec_sdk/downloads/v7.1
 
 (Just accept the EULA and Download, after Download finished be sure to place SDK inside your Download folder)
 
           $: cd Downloads
 /Downloads$: unzip Video_Codec_SDK_7.1.9
 /Downloads$: cd ~/Video_Codec_SDK_7.1.9/Samples
           $: make
           $: sudo cp ~/Downloads/Video_Codec_SDK_7.1.9/Samples/common/inc/*.h /usr/local/include

***Now we install Cuda 7.5 and move those files to the proper paths***
 
$: sudo service lightdm stop

 for Mint the command is:

$: sudo service mdm stop

(SOMETIMES YOU NEED TO FIND OTHER METHODS TO KILL XSERVER)

$: cd ~/Downloads

$: wget http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run

$: sudo chmod +x cuda_7.5.18_linux.run

$: sudo ./cuda_7.5.18_linux.run --override

(Just say yes to the unsupported configuartion the compiler changed but worked fine anyway with the --override flag)

(Say NO to installing the driver! but yes to the SDK and the Paths for install locations are fine at default)

(Once the install is finished we need to copy our cuda file to the proper path.

$: sudo cp ~/usr/local/cuda/
/cuda.h /usr/local/include

$: exit

Done for now... You are set up and ready to build FFmpeg with a shit load of extra options including NVencoding AKA ShadowPlay!


BUILDING FFMPEG FRMOM SOURCE WITH PRPER OPTIONS!
















































































STARTFRESH: rm -rf ~/ffmpeg_build ~/ffmpeg_sources ~/bin/{ffmpeg,ffprobe,ffplay,ffserver,vsyasm,x264,x265,yasm,ytasm}

$ cd ~/ffmpeg_sources
$ wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
$ tar xjvf ffmpeg-snapshot.tar.bz2
$ cd ffmpeg

PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
  --prefix="$HOME/ffmpeg_build" \
  --pkg-config-flags="--static" \
  --extra-cflags="-I$HOME/ffmpeg_build/include" \
  --extra-cflags="-I/usr/local/cuda/include/" \
  --extra-ldflags="-L/usr/local/cuda/lib64/" \
  --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
  --bindir="$HOME/bin" \
  --enable-gpl \
  --enable-nonfree \
  --enable-cuda \
  --enable-nvenc \
  --enable-opengl \
  --enable-libnpp \
  --enable-libass \
  --enable-libfdk-aac \
  --enable-libfreetype \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libx264 \
  --enable-libx265 
 
PATH="$HOME/bin:$PATH" make
make install
hash -r


*COMMAND TO UNINSTALL FOR UPDATE!!
rm -rf ~/ffmpeg_build ~/ffmpeg_sources ~/bin/{ffmpeg,ffprobe,ffplay,ffserver,vsyasm,x264,x265,yasm,ytasm}



NOW GO BUILD OBS!!!

FIRST REMOVE OBS-STUDIO: # dpkg -r obs-studio

git clone https://github.com/jp9000/obs-studio.git
cd obs-studio
mkdir build && cd build
cmake -DUNIX_STRUCTURE=1 -DCMAKE_INSTALL_PREFIX=/usr ..
make -j4
sudo checkinstall --pkgname=obs-studio --fstrans=no --backup=no \
       --pkgversion="$(date +%Y%m%d)-git" --deldoc=yes


